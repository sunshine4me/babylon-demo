import{ao as i,ap as n,T as v,R as c}from"./index-dzV0rMYg.js";class l extends i{constructor(e){super(e),this.config=e,this.initPriority=1;for(const t in this.config.eventData)this.registerDataOutput(t,this.config.eventData[t].type)}_preparePendingTasks(e){const t=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(t&&t.hasObservers()&&t.observers.length>n.MaxEventsPerType){this._reportError(e,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${n.MaxEventsPerType}.`);return}const s=t.add(o=>{const a=Object.keys(o);for(const r of a)this.getDataOutput(r)?.setValue(o[r],e);this._execute(e)});e._setExecutionVariable(this,"_eventObserver",s)}_cancelPendingTasks(e){const t=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(t){const s=e._getExecutionVariable(this,"_eventObserver",null);t.remove(s)}else v.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(e,t){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}c("FlowGraphReceiveCustomEventBlock",l);export{l as FlowGraphReceiveCustomEventBlock};
