import{al as h,af as l,ai as u,as as p,at as n,av as t,R as d}from"./index-DHuikXXi.js";class s extends h{constructor(e){super(e),this.startIndex=this.registerDataInput("startIndex",l,0),this.endIndex=this.registerDataInput("endIndex",l),this.step=this.registerDataInput("step",u,1),this.index=this.registerDataOutput("index",p,new n(t(e?.initialIndex??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(e){const o=t(this.startIndex.getValue(e)),a=this.step.getValue(e);let r=t(this.endIndex.getValue(e));for(let i=o;i<r&&(this.index.setValue(new n(i),e),this.executionFlow._activateSignal(e),r=t(this.endIndex.getValue(e)),!(i>s.MaxLoopIterations*a));i+=a);this.config?.incrementIndexWhenLoopDone&&this.index.setValue(new n(t(this.index.getValue(e))+a),e),this.completed._activateSignal(e)}getClassName(){return"FlowGraphForLoopBlock"}}s.MaxLoopIterations=1e3;d("FlowGraphForLoopBlock",s);export{s as FlowGraphForLoopBlock};
